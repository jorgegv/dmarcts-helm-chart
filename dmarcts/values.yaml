---
# Default values for dmarcts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: docker.io/jorgegv/dmarc-report
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels:
  app: dmarcts

podSecurityContext: {}
#  fsGroup: 2000

securityContext: {}
#  capabilities:
#    drop:
#    - ALL
#  readOnlyRootFilesystem: true
#  runAsNonRoot: true
#  runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  exec:
    command: ["sh", "-c", "curl -sf http://localhost/fpm-ping"]
readinessProbe:
  exec:
    command: ["sh", "-c", "curl -sf http://localhost | grep -q '<title>DMARC Report Viewer</title>'"]
  initialDelaySeconds: 3
  periodSeconds: 10

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

## Service Monitor
serviceMonitor:
  enabled: true
  port: 9100
  labels:
    release: prometheus-operator

# DMARCTS configuration
#
# The values defined here are default values.  All values are needed; the
# ones that are commented out should be defined in your own values.yaml or
# secrets file when deploying this chart
dmarcts:

  # Database configuration
  dbType: mysql
  # dbHost: <database_server>
  dbPort: 3306
  # dbName: <database_name>
  # dbUser: <database_user>
  # dbPassword: <database_password>

  # Parser configuration
  # imap mailbox configuration
  # parserImapServer: <your_imap_server>
  # parserImapUser: <your_user>
  # parserImapPassword: <your_password>
  parserImapPort: 143
  parserImapReadFolder: Inbox
  parserImapMoveFolder: processed
  parserImapErrorFolder: error
  parserImapSsl: 0
  parserImapTls: 1
  parserImapIgnoreError: 0
  # maximum XML report size in bytes, default: 10 MB
  parserXmlMaxSize: 10240000
  # hour and minute on which the parser will be run each day, default every hour at :15min
  parserCronHour: "*"
  parserCronMinute: 15
  # runs on container startup - can be disabled for debugging startup problems, e.g. db connection issues
  parserRunOnStartup: 1

  # Aggregator configuration
  # hour and minute on which the aggregator will be run each day, default at 10:10am
  aggregatorCronHour: 10
  aggregatorCronMinute: 10
  # the aggregator will process the data from this days before today, default 1 (yesterday)
  aggregatorDelayDays: 1

  # Purger configuration
  # hour and minute on which the purger will be run each day, default at 0:10am
  purgerCronHour: 0
  purgerCronMinute: 10
  # the purger will delete reports that are older than the retention days, default 730 (2 years)
  # aggregate statistics are never deleted, only DMARC reports!
  purgerRetentionDays: 730

  # Prometheus exporter configuration
  # port where /metrics URL is exposed, default 9100/tcp
  # as of now, changing this does nothing, 9100 is hardcoded
  exporterPort: 9100
